import io.qameta.allure.gradle.task.AllureReport
buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.3"
    }
}
allprojects {
    repositories {
        jcenter()
        mavenCentral()
    }
}
apply plugin: 'io.qameta.allure'
apply plugin: 'java'
dependencies {
    compile('junit:junit:+',
            'com.codeborne:selenide:5.2.1',
            'io.qameta.allure:allure-junit5:2.8.1',
            'org.rendersnake:rendersnake:+',
            'com.mashape.unirest:unirest-java:1.4.9',
            'org.aspectj:aspectjweaver:+',
            'io.searchbox:jest:5.3.3')
    compile group: 'com.github.javafaker', name: 'javafaker', version: '0.16'
    compile 'org.slf4j:slf4j-nop:1.7.25'
}
[compileJava, compileTestJava]*.options.collect {options -> options.encoding = 'UTF-8'}
[compileJava, compileTestJava]*.options.collect {options -> options.debug = true}
compileJava.options.debugOptions.debugLevel = "source,lines,vars"
sourceCompatibility = 1.8
targetCompatibility = 1.8
allure {
    version = '2.4.1'
    aspectjweaver = true
    autoconfigure = true
}
tasks.withType(Test) {
    useJUnit()
    reports.junitXml.enabled = true
    reports.html.enabled = false
    ignoreFailures = false
    systemProperties = System.properties as Map<String, ?>
}
task copyEnv(type: Copy) {
    from 'src/test/resources/dataForAllure/'
    into 'build/allure-results/'
}
task copyHistory(type: Copy) {
    from '../history'
    into 'build/allure-results/history'
}
task saveHistory(type: Copy) {
    from 'build/allure-report/history'
    into '../history'
}
task allureGenRep(type: AllureReport) {
    reportDir = file('build/allure-report')
}
allureGenRep.dependsOn(copyEnv, copyHistory)
tasks.withType(Test)*.finalizedBy allureGenRep, saveHistory